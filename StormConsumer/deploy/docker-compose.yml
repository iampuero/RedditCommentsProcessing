version: '3'
services:
  # # https://hub.docker.com/r/wurstmeister/zookeeper
  # zookeeper:
  #   image: wurstmeister/zookeeper:3.4.6
  #   ports: 
  #     - "2181:2181"
  #   networks:
  #     - storm-network
  # # https://hub.docker.com/r/wurstmeister/kafka
  # kafka:
  #   depends_on:
  #     - zookeeper
  #   image: wurstmeister/kafka:2.12-2.5.0
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: localhost
  #     KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
  #     KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #     KAFKA_CREATE_TOPICS: "numbers:1:1"
  #   ports:
  #     - "9093:9092" # produce from the outworld
  #   restart: always
  #   networks:
  #     - storm-network
  # https://hub.docker.com/_/cassandra
  cassandra:
    image: cassandra:3.11.6
    volumes:
      - "./cassandra-init.sh:/cassandra-init.sh"
    command: "sh /cassandra-init.sh"
    healthcheck:
      test: ["CMD-SHELL", "[ $$(nodetool statusgossip) = running ]"]
    networks:
      - storm-network
  # here is where the magic happens
  storm:
    depends_on: 
      - kafka
      - cassandra
    build:
      context: ./..
      dockerfile: ./deploy/Dockerfile.storm
    command: "sh /storm-init.sh"
    volumes: 
      - "../code:/app"
      - "./storm-init.sh:/storm-init.sh"
    environment: 
      STORM_KAFKA_CONNECT: kafka:9092
      STORM_CASSANDRA_CONNECT: cassandra
    networks:
      - storm-network

networks:
  storm-network:
    external: true